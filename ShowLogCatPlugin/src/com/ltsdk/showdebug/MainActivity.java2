
package com.ltsdk.showdebug;

import java.io.File;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.View;
import android.widget.Toast;

import com.ltsdk.tool.showtext.R;


public class MainActivity extends BaseActivity
{
	@Override
	public void onCreate(Bundle savedInstanceState)
	{
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
	}
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu)
	{
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}
	
	// 显示log信息
	public void OpenLog(View view)
	{
		// DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
		// String date = formatter.format(new Date());
		// String fileName = "log-" + date + ".txt";
		// ShowFile("/sdcard/ltsdk/Log/" + fileName);
		
		String lastCrachInfo = getLastFile("/sdcard/ltsdk/Log/");
		if (lastCrachInfo.equals(""))
			Toast.makeText(this, "暂无Log信息！", Toast.LENGTH_SHORT).show();
		else ShowFile(lastCrachInfo);
	}
	
	// 显示异常信息信息
	public void OpenCrash(View view)
	{
		String lastCrachInfo = getLastFile("/sdcard/ltsdk/crash/");
		if (lastCrachInfo.equals(""))
			Toast.makeText(this, "暂无异常信息！", Toast.LENGTH_SHORT).show();
		else ShowFile(lastCrachInfo);
	}
	
	// 清空log和闪退信息文件
	public void OpenClear(View view)
	{
		final File f = new File("/sdcard/ltsdk/");
		if (!f.exists() || f.list().length == 0)
			Toast.makeText(MainActivity.this, "暂无LogCat信息，无需清空！", Toast.LENGTH_SHORT).show();
		else
		{
			// new AlertDialog.Builder(this)	// Dialog(this)重写暂未实现
			new AlertDialog.Builder(proxyActivity).setTitle("确定清空所有LogCat信息？").setPositiveButton("确定", new DialogInterface.OnClickListener()
			{
				@Override
				public void onClick(DialogInterface dialog, int which)
				{
					boolean clear = ClearDir(f);
					Toast.makeText(MainActivity.this, clear ? "已清空！" : "清空失败！", Toast.LENGTH_SHORT).show();
				}
			}).setNegativeButton("取消", null).show();
		}
	}
	
	// ------------
	
	/** 获取目录下最后一个文件 */
	private String getLastFile(String dirPath)
	{
		File f = new File(dirPath);
		if (f.exists() && f.isDirectory())
		{
			String[] subFiles = f.list();
			if (subFiles.length > 0) return dirPath + subFiles[subFiles.length - 1];
		}
		return "";
	}
	
	/** 删除文件或目录下所有文件 */
	private boolean ClearDir(File dir)
	{
		if (!dir.exists()) return false;
		
		if (dir.isFile())
			dir.delete();
		else if (dir.isDirectory())
		{
			for (File f : dir.listFiles())
			{
				if (!ClearDir(f)) return false;
			}
			if (!dir.delete()) return false;
		}
		return true;
	}
	
	// /** 查看指定的文件，从类路径启动 */
	// private void ShowFile(String path)
	// {
	// File f = new File(path);
	// if (f.exists())
	// {
	// Intent intent = new Intent(this, ShowFile.class);
	// intent.putExtra("FilePath", path);
	//
	// this.startActivity(intent);
	// }
	// }
	
	/** 查看指定的文件，通过Action传参数启动 */
	private void ShowFile(String path)
	{
		File f = new File(path);
		if (f.exists())
		{
			Intent intent = new Intent(this, ShowFile.class);
//			intent.setAction("intent.action.ShowFile");
			intent.putExtra("FilePath", path);
			
			this.startActivity(intent);
		}
	}
}
